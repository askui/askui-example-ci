stages:          
  - build
  - test
  - deploy

default:
  image: node:latest
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .npm/

build-job:
  stage: build
  image: node
  script:
    - npm install
  artifacts:
    paths:
      - node_modules
  only:
    - main

test-job:
  stage: test
  services:
    - name: askuigmbh/askui-ui-controller:0.11.2-chrome-129.0-amd64
      alias: uicontroller
  before_script:
    - npm ci --cache .npm --prefer-offline || true
    # Create base directory
    - mkdir -p "/root/.askui/SnippingTool/AIElement/${ASKUI_WORKSPACE_ID}"
    # Create JSON file
    - cp -r "./askui/SnippingTool/AIElement/${ASKUI_WORKSPACE_ID}" "/root/.askui/SnippingTool/AIElement/${ASKUI_WORKSPACE_ID}"
    # Create .env file
    - |
      cat << EOF > .env
      standardUserName=$standardUserName
      commonPassword=$commonPassword
      lockedUserName=$lockedUserName
      errorUser=$errorUser
      problemUser=$problemUser
      glitchUser=$glitchUser
      EOF
  script:
    - npm run askui || true 
    - npm install jest @types/jest ts-jest --save-dev  
    - npm install mocha @types/mocha --save-dev        
  artifacts:
    when: always
    paths:
      - allure-results
      - .env
      - /root/.askui
    expire_in: 1 week
  variables:
    ASKUI_WORKSPACE_ID: $ASKUI_WORKSPACE_ID
    ASKUI_TOKEN: $ASKUI_TOKEN
    ASKUI_INFERENCE_SERVER_URL: $ASKUI_INFERENCE_SERVER_URL
    UI_CONTROLLER_URL: "http://uicontroller:6769"
    standardUserName: $standardUserName
    commonPassword: $commonPassword
    lockedUserName: $lockedUserName
    errorUser: $errorUser
    problemUser: $problemUser
    glitchUser: $glitchUser
  needs:
    - build-job
  only:
    - main

generate-allure-report:
  image: pradapjackie/allure-reports-generation:1.0
  stage: test
  script:
    - REPORT=job_${CI_JOB_ID}
    - allure generate allure-results -o allure-report
    - mv allure-report history
  artifacts:
    when: always
    paths:
    - history/
    expire_in: 1 week
  needs:
    - test-job
  when: always

pages:
  stage: deploy
  script:
    - mv history/ public/
  artifacts:
    when: always
    paths:
      - public
  dependencies:
    - generate-allure-report
  when: always
